apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: deploy-terraform
spec:
  entrypoint: deploy-terraform
  templates:
    - name: deploy-terraform
      steps:
        - - name: terraform-plan-dev
            template: terraform-plan
          - name: terraform-apply-dev
            depends: [terraform-plan-dev]
            template: terraform-apply
            arguments:
              parameters:
                - name: environment
                  value: "dev"
        - - name: terraform-test-dev
            template: terraform-test
          - name: terraform-plan-uat
            depends: [terraform-test-dev]
            template: terraform-plan
            arguments:
              parameters:
                - name: environment
                  value: "uat"
          - name: terraform-apply-uat
            depends: [terraform-plan-uat]
            template: terraform-apply
            arguments:
              parameters:
                - name: environment
                  value: "uat"
        - - name: terraform-test-uat
            template: terraform-test
          - name: terraform-plan-prod
            depends: [terraform-test-uat]
            template: terraform-plan
            arguments:
              parameters:
                - name: environment
                  value: "prod"
          - name: terraform-apply-prod
            depends: [terraform-plan-prod]
            template: terraform-apply
            arguments:
              parameters:
                - name: environment
                  value: "prod"
      volumes:
        - name: terraform-plan
          configMap:
            name: terraform-plan-configmap
        - name: terraform-secrets
          secret:
            secretName: terraform-secrets
    - name: terraform-plan
      container:
        image: hashicorp/terraform:1.4.2
        command:
          - terraform
          - plan
          - -input=false
          - -out=tfplan
          - -var-file=terraform/environments/$(inputs.parameters.environment)/terraform.tfvars
        volumeMounts:
          - name: terraform-plan
            mountPath: /terraform
          - name: terraform-secrets
            mountPath: /terraform-secrets
      inputs:
        parameters:
          - name: environment
            value: "dev"
    - name: terraform-apply
      container:
        image: hashicorp/terraform:1.4.2
        command:
          - terraform
          - apply
          - -auto-approve
          - tfplan
        volumeMounts:
          - name: terraform-plan
            mountPath: /terraform
          - name: terraform-secrets
            mountPath: /terraform-secrets
      inputs:
        parameters:
          - name: environment
            value: "dev"
    - name: terraform-test
      container:
        image: hashicorp/terraform:1.4.2
        command:
          - terraform
          - init
          - -backend-config="key=$(inputs.parameters.environment).tfstate"
          - -backend-config="bucket=<your-bucket-name>"
          - -backend-config="dynamodb_table=<your-dynamo-table-name>"
          - -backend-config="region=<your-region>"
          - -var-file=terraform/environments/$(inputs.parameters.environment)/terraform.tfvars
          - -target=module.<your-module-name>.<your-resource-type>.<your-resource-name>"
          - -input=false
        volumeMounts:
          - name: terraform-plan
            mountPath: /terraform
          - name: terraform-secrets
            mountPath: /terraform-secrets